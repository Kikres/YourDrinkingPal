@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav align-items-center">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logga ut</button>
        </form>
    </li>

    <li class="nav-item px-2">
            <a class="btn btn-outline-primary rounded-circle border-2 mb-lg-0" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="fa-solid fa-heart"></i></a>
    </li>
        
    <li class="nav-item">
        <a class="btn btn-primary rounded-pill px-3 mb-2 mb-lg-0" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@*Hello @User.Identity?.Name!*@Profil</a>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Registrera</a>
    </li>
    <li class="nav-item">
        <a class="btn btn-primary rounded-pill px-3 mb-2 mb-lg-0" asp-area="Identity" asp-page="/Account/Login"><span class="small">Logga in</span></a''>
    </li>
}
</ul>
